

STL: Standard Template Libaray




/***********************************************************************************/

컨테이너 (Container) : 객체를 저장하는 객체 (컬랙션, 자료구조) :

  표준 시퀀스 컨테이너 (삽입 순서) :
	
            - 배열 기반 컨테이너 : vector, deque
	        - 노드 기반 컨테이너 : list


  표준 연관 컨테이너 (정렬 기준) : 
            
            - 노드 기반 컨테이너 : set, multiset, map, multimap 
            
/***********************************************************************************/





/***********************************************************************************/

반복자 (Iterator) : 컨테이너의 원소를 가리키고, 가리키는 원소에 접근하여 다음 원소를 가리키게하는 기능 :
	
	입력 반복자: 현 위치의 원소를 한번만 읽을 수 있는 반복자 
	        - istream
	        
	출력 반복자: 현 위치의 원소를 한번만 쓸 수 있는 반복자 
	        - ostream
	        
	순방향 반복자: 입력, 출력 반복자 기능에 순방향으로 이동(++)이 가능한 재할당될 수 있는 반복자 
	        - list, set, mulitset, map, multimap, vector, deque
	
	양방향 반복자: 순방향 반복자 기능에 역방향으로 이동(--)이 가능한 반복자 
	        - list, set, mulitset, map, multimap
	        
	임의 접근 반복자: 양방향 반복자 기능에 +,-,+=,-=,[]연산이 가능한 반복자 
	        - vector, deque
	        
/***********************************************************************************/




/***********************************************************************************/

알고리즘 (Algorithm) : 정렬, 삭제, 검색, 연산 등을 해결하는 일반화된 방법을 제공하는 함수 템플릿

/***********************************************************************************/




/***********************************************************************************/

함수 객체 (Function Object) : 함수처럼 동작하는 객체, operator() 연산자를 오버로딩한 객체

/***********************************************************************************/




/***********************************************************************************/

어댑터 (Adaptor) : 구성 요소의 인터페이스를 변경해 새로운 인터페이스를 갖는 구성 요소로 변경

/***********************************************************************************/




/***********************************************************************************/

할당기 (Allocator) : 컨테이너의 메모리 할당 정책을 캡슐화한 클래스 객체

/***********************************************************************************/ 
